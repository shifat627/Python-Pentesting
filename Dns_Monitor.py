import scapy.all as Scapy
import argparse
from configparser import ConfigParser

parser = argparse.ArgumentParser(description="Arp spoofing Tool")
parser.add_argument("-t","--TargetIp",required=True,type=str,help="Ip Address Of Target Machine")
parser.add_argument("-f","--file",required=True,type=str,help="Config File")

parser.add_argument('-i','--index',required=True,type=int,help='Index of interface')
args= parser.parse_args()




try:
    config = ConfigParser()
    config.read(args.file)
    hosts = config.get('Hosts','sites',fallback='')
    hosts = hosts.split(',')
except Exception as Err:
    print(str(Err))
    exit(0)

def MatchHost(target,host_list):
    
    for i in host_list:
        
        if i in target.decode('utf-8'):
            return True
    
    return False

def DnsFilter(packet:Scapy.Packet):
    if(packet.haslayer(Scapy.DNSQR)):
        if(packet[Scapy.IP].src == args.TargetIp):
            if(MatchHost(packet[Scapy.DNSQR].qname,hosts)):
                print("{} --- {}".format(packet[Scapy.IP].src,packet[Scapy.DNSQR].qname))
        
            

Scapy.sniff(store=False,count=0,iface=Scapy.conf.ifaces.dev_from_index(args.index),filter="udp and dst port 53",prn=DnsFilter)#or 